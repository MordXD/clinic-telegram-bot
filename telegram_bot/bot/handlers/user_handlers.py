import re
from telegram import (
    Update,
    ReplyKeyboardMarkup,
    InlineKeyboardButton,
    InlineKeyboardMarkup
)
from telegram.ext import (
    CommandHandler,
    ContextTypes,
    ConversationHandler,
    MessageHandler,
    CallbackQueryHandler,
    filters
)
from config import ADMIN_CHAT_ID

# ====================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================== #

def escape_markdown_v2(text: str) -> str:
    """
    –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –¥–ª—è MarkdownV2.
    """
    return re.sub(r'([_*\[\]()~`>#+\-=|{}.!])', r'\\\1', text)

def get_initial_menu() -> ReplyKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π ¬´–ù–∞—á–∞—Ç—å¬ª.
    """
    keyboard = [
        ["–ù–∞—á–∞—Ç—å"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

def get_main_menu(context: ContextTypes.DEFAULT_TYPE) -> ReplyKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:
    - –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º ¬´–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É¬ª –∏ ¬´–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º¬ª.
    - –µ—Å–ª–∏ –û–¢–ü–†–ê–í–ò–õ –∑–∞—è–≤–∫—É, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¢–û–õ–¨–ö–û ¬´–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤¬ª.
    """
    application_submitted = context.user_data.get("application_submitted", False)
    
    if not application_submitted:
        # –ü–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–∫–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É" –∏ "–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"
        keyboard = [
            ["–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", "–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"]
        ]
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –æ—Å—Ç–∞–≤–∏–ª –∑–∞—è–≤–∫—É ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¢–û–õ–¨–ö–û "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"
        keyboard = [
            ["–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"]
        ]

    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# ====================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î ====================== #

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ö–æ–º–∞–Ω–¥–∞ /start. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–µ—Ä–≤—ã–π –ª–∏ —ç—Ç–æ –∑–∞–ø—É—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    –ï—Å–ª–∏ –¥–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É ¬´–ù–∞—á–∞—Ç—å¬ª. –ï—Å–ª–∏ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    user_data = context.user_data
    if not user_data.get("has_started"):
        # –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É ¬´–ù–∞—á–∞—Ç—å¬ª
        reply_markup = get_initial_menu()
        await update.message.reply_text(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∫–ª–∏–Ω–∏–∫–∏ –ó–¥–æ—Ä–æ–≤–∞—è –Ø!\n"
            "–û–û–û –¢–ò–ú (–¶–µ–Ω—Ç—Ä –∞–∫—É—à–µ—Ä—Å—Ç–≤–∞ –∏ –≥–∏–Ω–µ–∫–æ–ª–æ–≥–∏–∏ –ó–¥–æ—Ä–æ–≤–∞—è –Ø).\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ù–∞—á–∞—Ç—å¬ª, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:",
            reply_markup=reply_markup
        )
    else:
        # –ù–µ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
        reply_markup = get_main_menu(context)
        await update.message.reply_text(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:",
            reply_markup=reply_markup
        )

async def start_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ ¬´–ù–∞—á–∞—Ç—å¬ª. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    user_data = context.user_data
    user_data["has_started"] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—á–∞–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ

    reply_markup = get_main_menu(context)
    await update.message.reply_text(
        "–û—Ç–ª–∏—á–Ω–æ! –í—ã –≥–æ—Ç–æ–≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ:",
        reply_markup=reply_markup
    )
    return ConversationHandler.END  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ä–∞–∑–≥–æ–≤–æ—Ä

# ====================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ¬´–ó–ê–Ø–í–ö–ê¬ª ====================== #

async def handle_application(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏.
    """
    context.user_data['application'] = {}
    await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    return "NAME"

async def handle_application_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['application']['name'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return "PHONE"

def is_valid_phone_number(phone_number: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞: 10‚Äì15 —Ü–∏—Ñ—Ä –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Å–∏–º–≤–æ–ª–æ–≤.
    """
    return re.match(r'^\d{10,15}$', phone_number)

async def handle_application_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    phone_number = update.message.text
    if not is_valid_phone_number(phone_number):
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (10-15 —Ü–∏—Ñ—Ä).")
        return "PHONE"
    
    context.user_data['application']['phone'] = phone_number
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /skip:")
    return "COMMENT"

async def handle_application_comment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['application']['comment'] = update.message.text
    return await finish_application(update, context)

async def skip_comment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['application']['comment'] = None
    return await finish_application(update, context)

async def finish_application(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ó–∞–≤–µ—Ä—à–∞–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏: —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–ª–∞–≥, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É.
    """
    # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–≤–∏–ª –∑–∞—è–≤–∫—É
    context.user_data["application_submitted"] = True
    
    # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(
        "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω–∞ –∫–Ω–æ–ø–∫–∞ ¬´–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤¬ª.\n"
        "–°–ø–∞—Å–∏–±–æ!"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω—É (–º–µ–Ω—è–µ–º ID –Ω–∞ @username)
    application_data = context.user_data['application']
    bot = context.bot

    user = update.effective_user
    username = user.username or '–Ω–µ—Ç'
    message = (
        f"üìù *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:*\n"
        f"üë§ *–ò–º—è:* {escape_markdown_v2(application_data['name'])}\n"
        f"üìû *–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* `{escape_markdown_v2(application_data['phone'])}`\n"
        f"üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* {escape_markdown_v2(application_data['comment'] or '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤')}\n\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{escape_markdown_v2(username)}"
    )
    await bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text=message,
        parse_mode="MarkdownV2"
    )

    return ConversationHandler.END  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä

# ====================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ¬´–û–¢–ó–´–í¬ª ====================== #

async def handle_feedback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç–∑—ã–≤. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–∞–Ω–∞ –ª–∏ –≤–æ–æ–±—â–µ –∑–∞—è–≤–∫–∞.
    """
    application_submitted = context.user_data.get("application_submitted", False)
    if not application_submitted:
        await update.message.reply_text(
            "–í—ã –µ—â—ë –Ω–µ –æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞—è–≤–∫—É."
        )
        return ConversationHandler.END

    context.user_data['feedback'] = {}
    keyboard = [[
        InlineKeyboardButton("üëç", callback_data='1'),
        InlineKeyboardButton("üëå", callback_data='2'),
        InlineKeyboardButton("üòä", callback_data='3'),
        InlineKeyboardButton("üòÉ", callback_data='4'),
        InlineKeyboardButton("üåü", callback_data='5')
    ]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É:", reply_markup=reply_markup)
    return "RATING"

async def handle_feedback_rating(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    rating = int(query.data)
    context.user_data['feedback']['rating'] = rating

    if rating <= 3:
        await query.edit_message_text(
            text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ—Ü–µ–Ω–∫—É {rating}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å:"
        )
        return "DISLIKES"
    else:
        await query.edit_message_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ.")
        await send_feedback_to_admin(update, context)
        return ConversationHandler.END

async def handle_feedback_dislikes(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['feedback']['dislikes'] = update.message.text
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ.")
    await send_feedback_to_admin(update, context)
    return ConversationHandler.END

async def send_feedback_to_admin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    feedback_data = context.user_data.get('feedback', {})
    user = update.effective_user
    bot = context.bot

    username = user.username or '–Ω–µ—Ç'
    message = (
        f"üìù *–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤:*\n"
        f"üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* {escape_markdown_v2(user.first_name)} "
        f"{escape_markdown_v2(user.last_name or '')} "
        f"\\(@{escape_markdown_v2(username)}\\)\n"
        f"‚≠ê *–û—Ü–µ–Ω–∫–∞:* {escape_markdown_v2(str(feedback_data.get('rating', '–ù–µ—Ç –æ—Ü–µ–Ω–∫–∏')))}\n"
        f"üëé *–ß—Ç–æ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å:* {escape_markdown_v2(feedback_data.get('dislikes', '–ù–µ —É–∫–∞–∑–∞–Ω–æ'))}"
    )
    await bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text=message,
        parse_mode="MarkdownV2"
    )

# ====================== –ö–û–ú–ê–ù–î–ê ¬´–ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†¬ª ====================== #

async def contact_admin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–Ω–∏–∫–∏: +1234567890")

# ====================== –û–ë–†–ê–ë–û–¢–ß–ò–ö –ù–ï–ò–ó–í–ï–°–¢–ù–´–• –°–û–û–ë–©–ï–ù–ò–ô ====================== #

async def unknown_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –ò–Ω—Å—Ç—Ä—É–∫—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /start.
    """
    await update.message.reply_text(
        "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å–æ –º–Ω–æ–π."
    )

# ====================== –§–£–ù–ö–¶–ò–Ø –î–õ–Ø ConversationHandler ====================== #

def handle_user_commands():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –±–æ—Ç–∞.
    """
    return [
        CommandHandler("start", start),
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ ¬´–ù–∞—á–∞—Ç—å¬ª
        MessageHandler(filters.Regex("^–ù–∞—á–∞—Ç—å$"), start_button),
        
        ConversationHandler(
            entry_points=[MessageHandler(filters.TEXT & filters.Regex("^–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É$"), handle_application)],
            states={
                "NAME": [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_application_name)],
                "PHONE": [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_application_phone)],
                "COMMENT": [
                    MessageHandler(filters.TEXT & ~filters.COMMAND, handle_application_comment),
                    CommandHandler("skip", skip_comment)
                ],
            },
            fallbacks=[CommandHandler("cancel", start)],
        ),
        ConversationHandler(
            entry_points=[MessageHandler(filters.TEXT & filters.Regex("^–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤$"), handle_feedback)],
            states={
                "RATING": [CallbackQueryHandler(handle_feedback_rating)],
                "DISLIKES": [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_feedback_dislikes)],
            },
            fallbacks=[CommandHandler("cancel", start)],
        ),
        MessageHandler(filters.TEXT & filters.Regex("^–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º$"), contact_admin),
        # Fallback handler –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        MessageHandler(filters.ALL, unknown_message),
    ]
